[tox]
envlist = tests
skipsdist = true
minversion = 3.8.0
requires =
  tox-pip-extensions
  tox-pyenv
  tox-envfile
  tox-run-command
tox_pip_extensions_ext_venv_update = true
tox_pyenv_fallback = false

[testenv]
skip_install = true
sitepackages = {env:SITE_PACKAGES:false}
setenv = dev: PYTHONPATH = .
passenv =
    HOME
    EXTRA_DEPS
    dev: PYRAMID_GOOGLEAUTH_CLIENT_ID
    dev: PYRAMID_GOOGLEAUTH_CLIENT_SECRET
    dev: PYRAMID_GOOGLEAUTH_SECRET
    dev: SESSION_SECRET
    dist: BUILD
deps =
    dev: -r requirements-dev.txt
    {tests,lint,functests}: .[tests]
    lint: pylint
    lint: pydocstyle
    {checkformatting,format}: black
    {checkformatting,format}: isort[requirements]
    coverage: coverage
    {release,initialrelease}: packaging
    {dist,initialrelease}: twine
    {dist,initialrelease}: wheel
    {lint,replay-cookiecutter}: cookiecutter
    release: packaging
    {env:EXTRA_DEPS:}
whitelist_externals =
    release: {toxinidir}/bin/check_that_git_working_tree_is_clean.sh
    {dist,initialrelease}: rm
    {dev,release,initialrelease}: sh
    {release,initialrelease}: git
commands =
    dev: gunicorn -b "0.0.0.0:6547" --reload examples.app:app()

    tests: coverage run -m pytest {posargs:tests/unit}

    functests: pytest {posargs:tests/functional/}

    lint: pydocstyle --explain src examples
    lint: pydocstyle --config tests/.pydocstyle --explain tests
    lint: pylint {posargs:src bin examples}
    lint: pylint --rcfile=tests/.pylintrc tests

    format: black {posargs:src tests bin examples}
    format: isort --atomic .

    checkformatting: black --check {posargs:src tests bin examples}
    checkformatting: isort --quiet --check-only .

    coverage: -coverage combine
    coverage: coverage report

    {release,initialrelease}: {toxinidir}/bin/check_that_git_working_tree_is_clean.sh
    {dist,initialrelease}: rm -rf dist src/*.egg-info
    initialrelease: sh -c "BUILD=`python bin/next_version.py` python setup.py bdist_wheel sdist"
    dist: python setup.py bdist_wheel sdist
    {dist,initialrelease}: twine check dist/*
    {release,initialrelease}: sh -c "git tag -a `python bin/next_version.py`"
    {release,initialrelease}: git push git@github.com:hypothesis/pyramid-googleauth.git --follow-tags

    replay-cookiecutter: python bin/replay_cookie_cutter.py --config .cookiecutter.json --output-directory .
